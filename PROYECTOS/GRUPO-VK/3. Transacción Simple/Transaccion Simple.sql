SET SERVEROUTPUT ON

CREATE OR REPLACE PROCEDURE VK.NEW_TIPO_AVION (P_COD_TIPO_AVION VK.TIPO_AVION.COD_TIPO_AVION%TYPE,
   P_NOMBRE_TIPO VK.TIPO_AVION.NOMBRE_TIPO%TYPE,
   P_MAX_ASIENTOS VK.TIPO_AVION.MAX_ASIENTOS%TYPE,
   P_COD_AEROPUERTO VK.TIPO_AVION.COD_AEROPUERTO%TYPE)
IS
   V_CONT NUMBER(3);
BEGIN
   SELECT COUNT(*) INTO V_CONT
   FROM VK.TIPO_AVION
   WHERE COD_TIPO_AVION = P_COD_TIPO_AVION;
   IF(V_CONT > 0) THEN
      RAISE_APPLICATION_ERROR(-20000, 'El Tipo de Avi√≥n ya se Encuentra Registrado.');
   END IF;
   
   SELECT COUNT(*) INTO V_CONT
   FROM VK.AEROPUERTO
   WHERE COD_AEROPUERTO = P_COD_AEROPUERTO;
   IF(V_CONT = 0) THEN
      RAISE_APPLICATION_ERROR(-20000, 'El Aeropuerto NO Existe.');
   END IF;
   
   INSERT INTO VK.TIPO_AVION(COD_TIPO_AVION, NOMBRE_TIPO, MAX_ASIENTOS, COD_AEROPUERTO)
   VALUES (P_COD_TIPO_AVION, P_NOMBRE_TIPO, P_MAX_ASIENTOS, P_COD_AEROPUERTO);
   COMMIT;
   DBMS_OUTPUT.PUT_LINE('Proceso OK.');

EXCEPTION
   WHEN OTHERS THEN
      DBMS_OUTPUT.PUT_LINE('CODIGO DE ERROR: ' || SQLCODE);
      DBMS_OUTPUT.PUT_LINE(SQLERRM);
END;
/

EXEC VK.NEW_TIPO_AVION('TA17', 'Airbus A320 Neo', 220, 'B101');