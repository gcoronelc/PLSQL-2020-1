/*-------------------- CREACIÓN DE TABLAS --------------------*/
-- CALENDARIO
CREATE TABLE MG.T_CALENDARIO (
FECHASK NUMBER NOT NULL,
FECHA DATE NOT NULL,
ANIO NUMBER NOT NULL,
TRIMESTRE NUMBER NOT NULL,
MES NUMBER NOT NULL,
SEMANA NUMBER NOT NULL,
DIA NUMBER NOT NULL,
NMES VARCHAR2(15) NOT NULL,
NDIASEMANA VARCHAR2(10) NOT NULL
);
ALTER TABLE MG.T_CALENDARIO ADD CONSTRAINT PK_FECHA PRIMARY KEY (FECHA);

-- PAIS
CREATE TABLE MG.T_PAIS(
ID_PAIS INTEGER NOT NULL,
PAIS VARCHAR2(100) NOT NULL
);
ALTER TABLE MG.T_PAIS ADD CONSTRAINT PK_PAIS PRIMARY KEY (ID_PAIS);

COMMENT ON TABLE MG.T_PAIS IS 'TABLA QUE CONTIENE LOS PAISES';
COMMENT ON COLUMN MG.T_PAIS.ID_PAIS IS 'IDENTIFICADOR DEL PAIS';
COMMENT ON COLUMN MG.T_PAIS.PAIS IS 'NOMBRE DEL PAIS';

-- GENERO
CREATE TABLE MG.T_GENERO(
ID_GENERO INTEGER NOT NULL,
GENERO VARCHAR2(100) NOT NULL
);

ALTER TABLE MG.T_GENERO ADD CONSTRAINT PK_SEXO PRIMARY KEY (ID_GENERO);

COMMENT ON TABLE MG.T_GENERO IS 'TABLA QUE CONTIENE LOS GENEROS';
COMMENT ON COLUMN MG.T_GENERO.ID_GENERO IS 'IDENTIFICADOR DEL GENERO';
COMMENT ON COLUMN MG.T_GENERO.GENERO IS 'NOMBRE DEL GENERO';

-- PERSONA
CREATE TABLE MG.T_PERSONA(
ID_PERSONA INTEGER NOT NULL,
ID_PAIS INTEGER NOT NULL,
ID_GENERO INTEGER NOT NULL,
NOMBRES VARCHAR2(200) NOT NULL,
FECHA_NAC DATE NULL,
FLAG NUMBER(1) NOT NULL
);

ALTER TABLE MG.T_PERSONA ADD CONSTRAINT PK_PERSONA PRIMARY KEY (ID_PERSONA);
ALTER TABLE MG.T_PERSONA ADD CONSTRAINT FK_PERSONA_PAIS FOREIGN KEY (ID_PAIS) REFERENCES MG.T_PAIS (ID_PAIS);
ALTER TABLE MG.T_PERSONA ADD CONSTRAINT FK_PERSONA_GENERO FOREIGN KEY (ID_GENERO) REFERENCES MG.T_GENERO (ID_GENERO);
ALTER TABLE MG.T_PERSONA ADD CONSTRAINT CHK_PERSONA_FLAG CHECK (FLAG IN (1,0));

COMMENT ON TABLE MG.T_PERSONA IS 'TABLA QUE CONTIENE LA INFORMACION DE LAS PERSONAS';
COMMENT ON COLUMN MG.T_PERSONA.ID_PERSONA IS 'IDENTIFICADOR DE LA PERSONA';
COMMENT ON COLUMN MG.T_PERSONA.ID_PAIS IS 'IDENTIFICADOR DEL PAIS';
COMMENT ON COLUMN MG.T_PERSONA.ID_GENERO IS 'IDENTIFICADOR DEL GENERO';
COMMENT ON COLUMN MG.T_PERSONA.NOMBRES IS 'NOMBRES COMPLETOS';
COMMENT ON COLUMN MG.T_PERSONA.FECHA_NAC IS 'FECHA DE NACIMIENTO';
COMMENT ON COLUMN MG.T_PERSONA.FLAG IS 'FLAG QUE INDICA EL ESTADO DE LA PERSONA';

-- TIPOS DE USUARIO
CREATE TABLE MG.T_TIPO_USUARIO(
ID_TIPO_USUARIO INTEGER NOT NULL,
TIPO_USUARIO VARCHAR2(100) NOT NULL,
LIMITE NUMBER
);
ALTER TABLE MG.T_TIPO_USUARIO ADD CONSTRAINT PK_TIPO_USUARIO PRIMARY KEY (ID_TIPO_USUARIO);

COMMENT ON TABLE MG.T_TIPO_USUARIO IS 'TABLA QUE CONTIENE LOS TIPOS DE USUARIO';
COMMENT ON COLUMN MG.T_TIPO_USUARIO.ID_TIPO_USUARIO IS 'IDENTIFICADOR DEL TIPO DE USUARIO';
COMMENT ON COLUMN MG.T_TIPO_USUARIO.TIPO_USUARIO IS 'TIPO DE USUARIO';
COMMENT ON COLUMN MG.T_TIPO_USUARIO.LIMITE IS 'LIMITE DE CANCIONES DE ACUERDO AL TIPO DE USUARIO';

-- USUARIOS
CREATE TABLE MG.T_USUARIO(
ID_USUARIO INTEGER NOT NULL,
ID_TIPO_USUARIO INTEGER NOT NULL,
ID_PERSONA INTEGER NOT NULL,
USUARIO VARCHAR2(100) NOT NULL,
CONTRASENIA VARCHAR2(50) NOT NULL,
FLAG NUMBER(1) NOT NULL,
FECHA_REG DATE DEFAULT SYSDATE NOT NULL,
FECHA_BAJA DATE NULL
);
ALTER TABLE MG.T_USUARIO ADD CONSTRAINT PK_USUARIO PRIMARY KEY (ID_USUARIO);
ALTER TABLE MG.T_USUARIO ADD CONSTRAINT FK_USUARIO_TIPO FOREIGN KEY (ID_TIPO_USUARIO) REFERENCES MG.T_TIPO_USUARIO (ID_TIPO_USUARIO);
ALTER TABLE MG.T_USUARIO ADD CONSTRAINT FK_USUARIO_PERSONA FOREIGN KEY (ID_PERSONA) REFERENCES MG.T_PERSONA (ID_PERSONA);
ALTER TABLE MG.T_USUARIO ADD CONSTRAINT CHK_USUARIO_FLAG CHECK (FLAG IN (1,0));

COMMENT ON TABLE MG.T_USUARIO IS 'TABLA QUE CONTIENE LOS USUARIOS ACTIVOS/INACTIVOS';
COMMENT ON COLUMN MG.T_USUARIO.ID_USUARIO IS 'IDENTIFICADOR DEL USUARIO';
COMMENT ON COLUMN MG.T_USUARIO.ID_TIPO_USUARIO IS 'IDENTIFICADOR DEL TIPO DE USUARIO';
COMMENT ON COLUMN MG.T_USUARIO.ID_PERSONA IS 'IDENTIFICADOR DE LA PERSONA';
COMMENT ON COLUMN MG.T_USUARIO.USUARIO IS 'USUARIO';
COMMENT ON COLUMN MG.T_USUARIO.CONTRASENIA IS 'CONTRASENIA DEL USUARIO';
COMMENT ON COLUMN MG.T_USUARIO.FLAG IS 'FLAG QUE INDICA EL ESTADO DEL USUARIO';
COMMENT ON COLUMN MG.T_USUARIO.FECHA_REG IS 'FECHA DE REGISTRO';
COMMENT ON COLUMN MG.T_USUARIO.FECHA_BAJA IS 'FECHA DE BAJA';

-- ARTISTAS
CREATE TABLE MG.T_ARTISTA(
ID_ARTISTA INTEGER NOT NULL,
ID_PAIS INTEGER NOT NULL,
ARTISTA VARCHAR2(100) NOT NULL
);
ALTER TABLE MG.T_ARTISTA ADD CONSTRAINT PK_ARTISTA PRIMARY KEY (ID_ARTISTA);
ALTER TABLE MG.T_ARTISTA ADD CONSTRAINT FK_ARTISTA_PAIS FOREIGN KEY (ID_PAIS) REFERENCES MG.T_PAIS (ID_PAIS);

COMMENT ON TABLE MG.T_ARTISTA IS 'TABLA QUE CONTIENE LOS ARTISTAS MGALES';
COMMENT ON COLUMN MG.T_ARTISTA.ID_ARTISTA IS 'IDENTIFICADOR DEL ARTISTA';
COMMENT ON COLUMN MG.T_ARTISTA.ID_PAIS IS 'IDENTIFICADOR DEL PAIS';
COMMENT ON COLUMN MG.T_ARTISTA.ARTISTA IS 'NOMBRE DEL ARTISTA';

-- CANCIONES
CREATE TABLE MG.T_CANCION(
ID_CANCION INTEGER NOT NULL,
ID_ARTISTA INTEGER NOT NULL,
CANCION VARCHAR2(100) NOT NULL
);
ALTER TABLE MG.T_CANCION ADD CONSTRAINT PK_CANCION PRIMARY KEY (ID_CANCION);
ALTER TABLE MG.T_CANCION ADD CONSTRAINT FK_CANCION_ARTISTA FOREIGN KEY (ID_ARTISTA) REFERENCES MG.T_ARTISTA (ID_ARTISTA);

COMMENT ON TABLE MG.T_CANCION IS 'TABLA QUE CONTIENE LAS CANCIONES';
COMMENT ON COLUMN MG.T_CANCION.ID_CANCION IS 'IDENTIFICADOR DE LA CANCION';
COMMENT ON COLUMN MG.T_CANCION.ID_ARTISTA IS 'IDENTIFICADOR DEL ARTISTA';
COMMENT ON COLUMN MG.T_CANCION.CANCION IS 'NOMBRE DE LA CANCION';

-- CANCIONES REPRODUCIDAS
CREATE TABLE MG.T_CANCION_REPRO(
ID_CANCION_REPRO INTEGER NOT NULL,
ID_USUARIO INTEGER NOT NULL,
ID_CANCION INTEGER NOT NULL,
FECHA DATE NOT NULL
);
ALTER TABLE MG.T_CANCION_REPRO ADD CONSTRAINT PK_CANCION_REPRO PRIMARY KEY (ID_CANCION_REPRO);
ALTER TABLE MG.T_CANCION_REPRO ADD CONSTRAINT FK_CANCION_REPRO_USUARIO FOREIGN KEY (ID_USUARIO) REFERENCES MG.T_USUARIO (ID_USUARIO);
ALTER TABLE MG.T_CANCION_REPRO ADD CONSTRAINT FK_CANCION_REPRO_CANCION FOREIGN KEY (ID_CANCION) REFERENCES MG.T_CANCION (ID_CANCION);

COMMENT ON TABLE MG.T_CANCION_REPRO IS 'TABLA QUE CONTIENE LAS CANCIONES REPRODUCIDAS';
COMMENT ON COLUMN MG.T_CANCION_REPRO.ID_CANCION_REPRO IS 'IDENTIFICADOR DE LA CANCION REPRODUCIDA';
COMMENT ON COLUMN MG.T_CANCION_REPRO.ID_USUARIO IS 'IDENTIFICADOR DEL USUARIO';
COMMENT ON COLUMN MG.T_CANCION_REPRO.ID_CANCION IS 'IDENTIFICADOR DE LA CANCION';
COMMENT ON COLUMN MG.T_CANCION_REPRO.FECHA IS 'FECHA QUE SE REPRODUCE LA CANCION';

-- LISTA DE REPRODUCCION
CREATE TABLE MG.T_LISTA_REPROD(
ID_LISTA_REPROD INTEGER NOT NULL,
ID_USUARIO INTEGER NOT NULL,
LISTA_REPRODUCCION VARCHAR2(100) NOT NULL
);
ALTER TABLE MG.T_LISTA_REPROD ADD CONSTRAINT PK_LISTA_REPROD PRIMARY KEY (ID_LISTA_REPROD);
ALTER TABLE MG.T_LISTA_REPROD ADD CONSTRAINT FK_LISTA_REPROD_USUARIO FOREIGN KEY (ID_USUARIO) REFERENCES MG.T_USUARIO (ID_USUARIO);

COMMENT ON TABLE MG.T_LISTA_REPROD IS 'TABLA QUE CONTIENE LAS LISTAS DE REPRODUCCION DE LOS USUARIOS';
COMMENT ON COLUMN MG.T_LISTA_REPROD.ID_LISTA_REPROD IS 'IDENTIFICADOR DE LA LISTO DE REPRODUCCION';
COMMENT ON COLUMN MG.T_LISTA_REPROD.ID_USUARIO IS 'IDENTIFICADOR DEL USUARIO';
COMMENT ON COLUMN MG.T_LISTA_REPROD.LISTA_REPRODUCCION IS 'NOMBRE DE LA LISTA DE REPRODUCCION';

-- CANCIONES DENTRO DE LA LISTA DE REPRODUCCION
CREATE TABLE MG.T_LISTA_CANCION(
ID_LISTA_CANCION INTEGER NOT NULL,
ID_LISTA_REPROD INTEGER NOT NULL,
ID_CANCION INTEGER NOT NULL,
FECHA DATE DEFAULT SYSDATE
);

ALTER TABLE MG.T_LISTA_CANCION ADD CONSTRAINT PK_LISTA_CANCION PRIMARY KEY (ID_LISTA_CANCION);
ALTER TABLE MG.T_LISTA_CANCION ADD CONSTRAINT PK_LISTA_CANCION_LISTA FOREIGN KEY (ID_LISTA_REPROD) REFERENCES MG.T_LISTA_REPROD (ID_LISTA_REPROD);
ALTER TABLE MG.T_LISTA_CANCION ADD CONSTRAINT PK_LISTA_CANCION_CANCION FOREIGN KEY (ID_CANCION) REFERENCES MG.T_CANCION (ID_CANCION);

COMMENT ON TABLE MG.T_LISTA_CANCION IS 'TABLA QUE CONTIENEN LAS CANCIONES DENTRO DE LAS LISTAS DE REPRODUCCION';
COMMENT ON COLUMN MG.T_LISTA_CANCION.ID_LISTA_CANCION IS 'IDENTIFICADOR DE LA CANCION EN LA LISTA';
COMMENT ON COLUMN MG.T_LISTA_CANCION.ID_LISTA_REPROD IS 'IDENTIFICADOR DE LA LISTA DE REPRODUCCION';
COMMENT ON COLUMN MG.T_LISTA_CANCION.ID_CANCION IS 'IDENTIFICADOR DE LA CANCION';
COMMENT ON COLUMN MG.T_LISTA_CANCION.FECHA IS 'FECHA EN LA QUE SE AGREGA LA CANCION A LA LISTA';

-- CUENTAS BANCARIAS DE USUARIOS
CREATE TABLE MG.T_CUENTA(
ID_CUENTA INTEGER NOT NULL,
ID_CLIENTE INTEGER NOT NULL,
CUENTA_SALDO NUMBER NOT NULL,
FECHA_CREACION DATE DEFAULT SYSDATE
);

ALTER TABLE MG.T_CUENTA ADD CONSTRAINT PK_CUENTA PRIMARY KEY (ID_CUENTA);
ALTER TABLE MG.T_CUENTA ADD CONSTRAINT PK_CUENTA_USUARIO FOREIGN KEY (ID_CLIENTE) REFERENCES MG.T_PERSONA (ID_PERSONA);

COMMENT ON TABLE MG.T_CUENTA IS 'TABLA QUE CONTIENEN LA RELACION DE LAS CUENTAS BANCARIAS DE LOS USUARIOS';
COMMENT ON COLUMN MG.T_CUENTA.ID_CUENTA IS 'IDENTIFICADOR DE LA CUENTA BANCARIA DE LAS PERSONAS USUARIOS DEL MUSIC GALAXY';
COMMENT ON COLUMN MG.T_CUENTA.ID_CLIENTE IS 'IDENTIFICADOR DE LA PERSONA DUEÑA DE LA CUENTA';
COMMENT ON COLUMN MG.T_CUENTA.CUENTA_SALDO IS 'SALDO DE LA CUENTA';
COMMENT ON COLUMN MG.T_CUENTA.FECHA_CREACION IS 'FECHA DE CREACION DE LA CUENTA';

-- PAGOS DE USUARIOS PARA SER PREMIUM
CREATE TABLE MG.T_PREMIUM(
ID_PREMIUM INTEGER NOT NULL,
ID_USUARIO INTEGER NOT NULL,
N_CUENTA NUMBER NOT NULL,
FECHA_PAGO DATE DEFAULT SYSDATE,
FECHA_FIN DATE DEFAULT ADD_MONTHS(SYSDATE, 1)
);

ALTER TABLE MG.T_PREMIUM ADD CONSTRAINT PK_PREMIUM PRIMARY KEY (ID_PREMIUM);
ALTER TABLE MG.T_PREMIUM ADD CONSTRAINT PK_PREMIUM_USUARIO FOREIGN KEY (ID_USUARIO) REFERENCES MG.T_USUARIO (ID_USUARIO);
ALTER TABLE MG.T_PREMIUM ADD CONSTRAINT PK_PREMIUM_CUENTA FOREIGN KEY (N_CUENTA) REFERENCES MG.T_CUENTA (ID_CUENTA);

COMMENT ON TABLE MG.T_PREMIUM IS 'TABLA QUE CONTIENEN LA RELACION DE LOS PAGOS HECHOS POR LOS USUARIOS PARA SER DE TIPO PREMIUM';
COMMENT ON COLUMN MG.T_PREMIUM.ID_PREMIUM IS 'IDENTIFICADOR DE LA TRANSACCION HECHA PARA SER PREMIUM';
COMMENT ON COLUMN MG.T_PREMIUM.ID_USUARIO IS 'IDENTIFICADOR DEL USUARIO QUE REALIZA EL PAGO';
COMMENT ON COLUMN MG.T_PREMIUM.N_CUENTA IS 'NUMERO DE TARJETA CON LA QUE SE REALIZA EL PAGO';
COMMENT ON COLUMN MG.T_PREMIUM.FECHA_PAGO IS 'FECHA EN LA QUE SE REALIZA EL PAGO';
COMMENT ON COLUMN MG.T_PREMIUM.FECHA_FIN IS 'FECHA DE FIN DEL PAGO';

------------- TABLAS TEMPORALES
---- INFORMACION SEGUN ANIO Y MES
-- CANCIONES REPRODUCIDAS DETALLE
CREATE GLOBAL TEMPORARY TABLE MG.T_TMP_CANCION_REPRO(
ID_CANCION_REPRO INTEGER,
ID_CANCION INTEGER,
ANIO NUMBER,
MES NUMBER
) ON COMMIT PRESERVE ROWS;

-- CANCION REPRODUCIDAS RESUMEN(CANTIDAD Y RANKING)
CREATE GLOBAL TEMPORARY TABLE MG.T_TMP_CAN_ART_REPRO_RANK(
ANIO NUMBER,
MES NUMBER,
ID_CAN_ART INTEGER,
REPRODUCCIONES NUMBER,
RANKING NUMBER
) ON COMMIT PRESERVE ROWS;

-- COLA DE REPRODUCCION
CREATE GLOBAL TEMPORARY TABLE MG.T_TMP_COLA_REPROD(
ID_LISTA_CANCION NUMBER,
CANCION VARCHAR2(100),
ARTISTA VARCHAR(100)
) ON COMMIT PRESERVE ROWS;

/*TRUNCATE TABLE MG.T_TMP_CANCION_REPRO;
DROP TABLE MG.T_TMP_CANCION_REPRO;*/

/*TRUNCATE TABLE MG.T_TMP_CANCION_REPRO_RANK;
DROP TABLE MG.T_TMP_CANCION_REPRO_RANK;*/